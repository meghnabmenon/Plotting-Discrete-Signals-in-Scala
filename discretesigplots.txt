import breeze.linalg._
 import breeze.plot._
 import breeze.numerics._
 object ics1_discrete {
 val x1 = linspace(-5.0,5.0,50)                   //> x1  : breeze.linalg.DenseVector[Double] = DenseVector(-5.0, -4.7959183673469
                                                  //| 39, -4.591836734693878, -4.387755102040816, -4.183673469387755, -3.979591836
                                                  //| 734694, -3.7755102040816326, -3.571428571428571, -3.36734693877551, -3.16326
                                                  //| 5306122449, -2.9591836734693877, -2.7551020408163263, -2.5510204081632653, -
                                                  //| 2.3469387755102042, -2.142857142857143, -1.9387755102040813, -1.734693877551
                                                  //| 0203, -1.5306122448979593, -1.3265306122448979, -1.1224489795918364, -0.9183
                                                  //| 673469387754, -0.7142857142857144, -0.5102040816326525, -0.3061224489795915,
                                                  //|  -0.1020408163265305, 0.1020408163265305, 0.3061224489795915, 0.510204081632
                                                  //| 6534, 0.7142857142857144, 0.9183673469387754, 1.1224489795918373, 1.32653061
                                                  //| 22448983, 1.5306122448979593, 1.7346938775510203, 1.9387755102040813, 2.1428
                                                  //| 571428571432, 2.3469387755102042, 2.5510204081632653, 2.755102040816327, 2.9
                                                  //| 59183673469388, 3.163265306122449, 3.36734693877551, 3.571428571428571, 3.77
                                                  //| 5510204081632, 3.9795918
                                                  //| Output exceeds cutoff limit.
 val x=x1.toDenseMatrix                           //> x  : breeze.linalg.DenseMatrix[Double] = -5.0  -4.795918367346939  -4.591836
                                                  //| 734693878  ... (50 total)
 val u=DenseMatrix.zeros[Double](1,x1.length)     //> u  : breeze.linalg.DenseMatrix[Double] = 0.0  0.0  0.0  0.0  0.0  0.0  0.0  
                                                  //| 0.0  0.0  0.0  0.0  0.0  0.0  ... (50 total)
 var a=0                                          //> a  : Int = 0
 for(a<-0 to x1.length-1){
 if(x(0,a)>0){
 u(0,a)=1
 }
 else{
 u(0,a)=0
 }
 }
   val f = Figure()                               //> f  : breeze.plot.Figure = breeze.plot.Figure@47987356
   val p = f.subplot(3,3,0)                       //> p  : breeze.plot.Plot = breeze.plot.Plot@576d5deb
   var u1=u.toDenseVector                         //> u1  : breeze.linalg.DenseVector[Double] = DenseVector(0.0, 0.0, 0.0, 0.0, 0.
                                                  //| 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
                                                  //| , 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
                                                  //|  1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)
                                                  //| 
   p += plot(x1, u1 ,'.')                         //> res0: breeze.plot.Plot = breeze.plot.Plot@576d5deb
var a2=0                                          //> a2  : Int = 0
val u3=DenseMatrix.zeros[Double](1,x1.length)     //> u3  : breeze.linalg.DenseMatrix[Double] = 0.0  0.0  0.0  0.0  0.0  0.0  0.0 
                                                  //|  0.0  0.0  0.0  0.0  0.0  0.0  ... (50 total)

for(a2<-0 to x1.length-1){
if(x(0,a2)>= -2 && x(0,a2)<= 2){
u3(0,a2)=1
}
else{
u3(0,a2)=0
}
}
 var u2=u3.toDenseVector                          //> u2  : breeze.linalg.DenseVector[Double] = DenseVector(0.0, 0.0, 0.0, 0.0, 0.
                                                  //| 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0
                                                  //| , 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
                                                  //|  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
                                                  //| 
 val p1 = f.subplot(3,3,1)                        //> p1  : breeze.plot.Plot = breeze.plot.Plot@5386659f
   p1 += plot(x1, u2 ,'.')                        //> res1: breeze.plot.Plot = breeze.plot.Plot@5386659f
val u5=DenseMatrix.zeros[Double](1,x1.length)     //> u5  : breeze.linalg.DenseMatrix[Double] = 0.0  0.0  0.0  0.0  0.0  0.0  0.0 
                                                  //|  0.0  0.0  0.0  0.0  0.0  0.0  ... (50 total)
var a3=0                                          //> a3  : Int = 0
for(a3<-0 to x1.length-1){
if(x(0,a3)==5){
u5(0,a)=1
}
else{
u5(0,a)=0
}
}
 var u4=u5.toDenseVector                          //> u4  : breeze.linalg.DenseVector[Double] = DenseVector(1.0, 0.0, 0.0, 0.0, 0.
                                                  //| 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
                                                  //| , 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  //|  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
                                                  //| 
val p2 = f.subplot(3,3,2)                         //> p2  : breeze.plot.Plot = breeze.plot.Plot@7ce026d3
 p2 += plot(x1, u4 ,'.')                          //> res2: breeze.plot.Plot = breeze.plot.Plot@7ce026d3

var fnc=DenseMatrix.zeros[Double](1,x1.length)    //> fnc  : breeze.linalg.DenseMatrix[Double] = 0.0  0.0  0.0  0.0  0.0  0.0  0.0
                                                  //|   0.0  0.0  0.0  0.0  0.0  0.0  ... (50 total)
var a4=0                                          //> a4  : Int = 0
for(a4<-0 to x1.length-1)
{
if(x(0,a4)>0){
fnc(0,a4)=1
}
else if(x(0,a4)<0){
fnc(0,a4)= -1
}
else{
fnc(0,a4)=0
}
}
var fnc1=fnc.toDenseVector                        //> fnc1  : breeze.linalg.DenseVector[Double] = DenseVector(-1.0, -1.0, -1.0, -
                                                  //| 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0
                                                  //| , -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0,
                                                  //|  1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
                                                  //|  1.0, 1.0, 1.0, 1.0, 1.0, 1.0)
val p3 = f.subplot(3,3,3)                         //> p3  : breeze.plot.Plot = breeze.plot.Plot@5b247367
 p3 += plot(x1, fnc1 ,'.')                        //> res3: breeze.plot.Plot = breeze.plot.Plot@5b247367
var fnc2=DenseMatrix.zeros[Double](1,x1.length)   //> fnc2  : breeze.linalg.DenseMatrix[Double] = 0.0  0.0  0.0  0.0  0.0  0.0  0
                                                  //| .0  0.0  0.0  0.0  0.0  0.0  0.0  ... (50 total)

for(a4<-0 to x1.length-1){
if(x(0,a4)<0){
fnc2(0,a4)=0
}
else{
fnc2(0,a4)=x(0,a4)
}
}
var fnc3=fnc2.toDenseVector                       //> fnc3  : breeze.linalg.DenseVector[Double] = DenseVector(0.0, 0.0, 0.0, 0.0,
                                                  //|  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  //|  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1020408163265305, 0.3061224489795915, 0.51
                                                  //| 02040816326534, 0.7142857142857144, 0.9183673469387754, 1.1224489795918373,
                                                  //|  1.3265306122448983, 1.5306122448979593, 1.7346938775510203, 1.938775510204
                                                  //| 0813, 2.1428571428571432, 2.3469387755102042, 2.5510204081632653, 2.7551020
                                                  //| 40816327, 2.959183673469388, 3.163265306122449, 3.36734693877551, 3.5714285
                                                  //| 71428571, 3.775510204081632, 3.979591836734695, 4.183673469387756, 4.387755
                                                  //| 102040817, 4.591836734693878, 4.795918367346939, 5.0)
val p4 = f.subplot(3,3,4)                         //> p4  : breeze.plot.Plot = breeze.plot.Plot@7e057f43
 p4 += plot(x1, fnc3 ,'.')                        //> res4: breeze.plot.Plot = breeze.plot.Plot@7e057f43
          var c1=exp(-x1)                         //> c1  : breeze.linalg.DenseVector[Double] = DenseVector(148.4131591025766, 12
                                                  //| 1.01546742028926, 98.67550454086953, 80.45959251290459, 65.60641425108047, 
                                                  //| 53.49519499734032, 43.61975761777491, 35.56736740053064, 29.001482192758264
                                                  //| , 23.64768693463453, 19.282224737400533, 15.72264517249992, 12.820178925767
                                                  //| 504, 10.453520122438803, 8.5237564610426, 6.95023526584222, 5.6671926833358
                                                  //| 04, 4.621005143221287, 3.7679482111958893, 3.0723691669291933, 2.5051969318
                                                  //| 074176, 2.0427270702661424, 1.665631084973269, 1.3581486002766736, 1.107428
                                                  //| 6719757576, 0.9029926940720302, 0.7362964551863369, 0.6003730411984042, 0.4
                                                  //| 8954165955695306, 0.39917021584348367, 0.3254817196982518, 0.26539642902432
                                                  //| 96, 0.21640313503371336, 0.17645420861381114, 0.14388002157489863, 0.117319
                                                  //| 16609425073, 0.0956615559435782, 0.07800203146853764, 0.06360252928362677, 
                                                  //| 0.05186123560007895, 0.04228743397881315, 0.03448099629368951, 0.0281156597
                                                  //| 48972045, 0.02292539102
                                                  //| Output exceeds cutoff limit.
val p5 = f.subplot(3,3,5)                         //> p5  : breeze.plot.Plot = breeze.plot.Plot@8462f31
 p5 += plot(x1, c1,'.')                           //> res5: breeze.plot.Plot = breeze.plot.Plot@8462f31

 var c=exp(x1)                                    //> c  : breeze.linalg.DenseVector[Double] = DenseVector(0.006737946999085467, 
                                                  //| 0.008263406499327719, 0.010134227381485734, 0.01242859886271005, 0.01524241
                                                  //| 2063139558, 0.018693267685999052, 0.022925391029511435, 0.02811565974897204
                                                  //| 5, 0.03448099629368951, 0.04228743397881315, 0.05186123560007898, 0.0636025
                                                  //| 2928362682, 0.07800203146853764, 0.0956615559435782, 0.11731916609425078, 0
                                                  //| .14388002157489863, 0.17645420861381114, 0.21640313503371336, 0.26539642902
                                                  //| 432975, 0.32548171969825207, 0.39917021584348367, 0.48954165955695306, 0.60
                                                  //| 03730411984047, 0.7362964551863369, 0.9029926940720302, 1.1074286719757576,
                                                  //|  1.3581486002766736, 1.6656310849732703, 2.0427270702661424, 2.505196931807
                                                  //| 4176, 3.0723691669291964, 3.767948211195891, 4.621005143221287, 5.667192683
                                                  //| 335804, 6.95023526584222, 8.523756461042604, 10.453520122438803, 12.8201789
                                                  //| 25767504, 15.722645172499934, 19.28222473740054, 23.64768693463453, 29.0014
                                                  //| 82192758264, 35.5673674
                                                  //| Output exceeds cutoff limit.
val p6 = f.subplot(3,3,6)                         //> p6  : breeze.plot.Plot = breeze.plot.Plot@5ddeb7cb
 p6 += plot(x1, c,'.')                            //> res6: breeze.plot.Plot = breeze.plot.Plot@5ddeb7cb


 }